#!/usr/bin/python
# -*- coding: utf-8 -*-
# {{ rm['COPYRIGHT'] }}
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
"""
The module file for {{ network_os }}_facts
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type


ANSIBLE_METADATA = {
    'metadata_version': '{{rm_ansible_metadata['metadata_version']}}',
    'status': {{rm_ansible_metadata['status']}},
    'supported_by': '{{rm_ansible_metadata['supported_by']}}'}


DOCUMENTATION = """
---
module: {{ network_os }}_facts
version_added: '{{ rm_docmentation['version_added'] }}'
short_description: Get facts about {{ network_os }} devices.
description:
  - Collects facts from network devices running the {{ network_os }} operating
    system. This module places the facts gathered in the fact tree keyed by the
    respective resource name.  The facts module will always collect a
    base set of facts from the device and can enable or disable
    collection of additional facts.
author: {{ rm_docmentation['author'] }}
options:
  gather_subset:
    description:
      - When supplied, this argument will restrict the facts collected
        to a given subset. Possible values for this argument include
        all, min, hardware, config, legacy, and interfaces. Can specify a
        list of values to include a larger subset. Values can also be used
        with an initial C(M(!)) to specify that a specific subset should
        not be collected.
    required: false
    default: 'all'
    version_added: "2.2"
  gather_network_resources:
    description:
      - When supplied, this argument will restrict the facts collected
        to a given subset. Possible values for this argument include
        all and the resources like interfaces, vlans etc.
        Can specify a list of values to include a larger subset. Values
        can also be used with an initial C(M(!)) to specify that a
        specific subset should not be collected.
    required: false
    version_added: "2.9"
"""

EXAMPLES = """
# Gather all facts
- {{ network_os }}_facts:
    gather_subset: all
    gather_network_resources: all

# Collect only the {{ resource }} facts
- {{ network_os }}_facts:
    gather_subset:
      - !all
      - !min
    gather_network_resources:
      - {{ resource }}

# Do not collect {{ resource }} facts
- {{ network_os }}_facts:
    gather_network_resources:
      - "!{{ resource }}"

# Collect {{ resource }} and minimal default facts
- {{ network_os }}_facts:
    gather_subset: min
    gather_network_resources: {{ resource }}
"""

RETURN = """
See the respective resource module parameters for the tree.
"""

from ansible.module_utils.basic import AnsibleModule
from {{ import_path }}.{{ network_os }}.argspec.facts.facts import FactsArgs
from {{ import_path }}.{{ network_os }}.facts.facts import Facts


def main():
    """
    Main entry point for module execution

    :returns: ansible_facts
    """
    module = AnsibleModule(argument_spec=FactsArgs.argument_spec,
                           supports_check_mode=True)
    warnings = ['default value for `gather_subset` '
                'will be changed to `min` from `!config` v2.11 onwards']

    result = Facts(module).get_facts()

    ansible_facts, additional_warnings = result
    warnings.extend(additional_warnings)

    module.exit_json(ansible_facts=ansible_facts, warnings=warnings)


if __name__ == '__main__':
    main()
